<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>猫玛尼</title>
  
  <subtitle>Stay Hungry, Stay Foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.moremoney.ink/"/>
  <updated>2019-03-04T06:00:06.110Z</updated>
  <id>https://blog.moremoney.ink/</id>
  
  <author>
    <name>猫玛尼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac强大的终端——iTerm2</title>
    <link href="https://blog.moremoney.ink/2019/03/04/Mac%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%BB%88%E7%AB%AF%E2%80%94%E2%80%94iTerm2/"/>
    <id>https://blog.moremoney.ink/2019/03/04/Mac强大的终端——iTerm2/</id>
    <published>2019-03-04T05:20:45.000Z</published>
    <updated>2019-03-04T06:00:06.110Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【简介】"><a href="#【简介】" class="headerlink" title="【简介】"></a>【简介】</h3><ol><li><p>免费</p></li><li><p>Mac自带的终端工具“终端”，使用起来不够便捷，也不够炫，之前工作的时候，在朋友那边发现了一款超级酷炫的终端工具“iTerm2”。用过它之后，你一定会喜欢上它。</p></li></ol><a id="more"></a><ol start="3"><li>这是它的官网，官网也很酷啊：<a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></li></ol><h3 id="【新用户亮点】"><a href="#【新用户亮点】" class="headerlink" title="【新用户亮点】"></a>【新用户亮点】</h3><p>根据官网的描述，下面这些是iTerm2有一些特性，超出了基本的使用范围，并且通常在其他终端模拟器中是找不到的。这些特性很可能吸引那些从来没用过的人来使用它。</p><ol><li>一般的终端</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【简介】&quot;&gt;&lt;a href=&quot;#【简介】&quot; class=&quot;headerlink&quot; title=&quot;【简介】&quot;&gt;&lt;/a&gt;【简介】&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;免费&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mac自带的终端工具“终端”，使用起来不够便捷，也不够炫，之前工作的时候，在朋友那边发现了一款超级酷炫的终端工具“iTerm2”。用过它之后，你一定会喜欢上它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="工具" scheme="https://blog.moremoney.ink/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Mac究极进化" scheme="https://blog.moremoney.ink/tags/Mac%E7%A9%B6%E6%9E%81%E8%BF%9B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Shell总结</title>
    <link href="https://blog.moremoney.ink/2019/03/04/Shell%E6%80%BB%E7%BB%93/"/>
    <id>https://blog.moremoney.ink/2019/03/04/Shell总结/</id>
    <published>2019-03-04T03:44:59.000Z</published>
    <updated>2019-03-04T05:51:00.966Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【手法】"><a href="#【手法】" class="headerlink" title="【手法】"></a>【手法】</h3><ol><li><p>查看本机上装了哪些shell</p><p>cat /etc/shells</p><a id="more"></a><p>ls /bin/*sh</p></li><li><p>查看当前使用的是哪个shell</p><p>echo $0</p></li><li><p>查看当前bash的版本号</p><p>bash -version</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【手法】&quot;&gt;&lt;a href=&quot;#【手法】&quot; class=&quot;headerlink&quot; title=&quot;【手法】&quot;&gt;&lt;/a&gt;【手法】&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看本机上装了哪些shell&lt;/p&gt;
&lt;p&gt;cat /etc/shells&lt;/p&gt;
    
    </summary>
    
      <category term="脚本" scheme="https://blog.moremoney.ink/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="Shell" scheme="https://blog.moremoney.ink/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://blog.moremoney.ink/2019/03/04/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.moremoney.ink/2019/03/04/Git常用命令/</id>
    <published>2019-03-04T01:29:55.000Z</published>
    <updated>2019-03-04T03:17:20.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【git-branch】"><a href="#【git-branch】" class="headerlink" title="【git branch】"></a>【git branch】</h3><p>一般用于分支的操作，比如查看分支、创建分支等</p><a id="more"></a><ol><li><p>git branch 不带参数</p><p>列出本地已经存在的分支，并且在当前分支的前面用“*”标记</p></li><li><p>git branch -r</p><p>查看远程版本分支列表，显示为红色</p></li><li><p>git branch -a</p><p>查看所有分支列表，包括本地和远程，其中远程分支显示为红色</p></li><li><p>git branch dev-190304-bigPlan</p><p>创建名为“dev-190304-bigPlan”的本地分支，当前任然在原来的分支上（我用IDEA创建新分支的时候，创建完当前环境自动切换到了新创建的分支上了，这里跟命令行创建有点区别）</p></li><li><p>git branch -d dev-190304-bigPlan</p><p>删除本地分支“dev-190304-bigPlan”，如果你正在待删除的分支上，则会报错“error: Cannot delete branch ‘dev-190304-bigPlan’ checked out at ‘/Users/luoyanjie/IdeaProjects/sea’”</p></li><li><p>git branch -vv</p><p>可以查看本地分支对应的远程分支</p></li></ol><h3 id="【git-check】"><a href="#【git-check】" class="headerlink" title="【git check】"></a>【git check】</h3><ol><li><p>git checkout dev-190304-bigPlan</p><p>检出（切换）到“dev-190304-bigPlan”分支</p></li></ol><h3 id="【git-push】"><a href="#【git-push】" class="headerlink" title="【git push】"></a>【git push】</h3><ol><li><p>git push origin dev-190304-bigPlan</p><p>把本地分支“dev-190304-bigPlan”推送到远程仓库</p></li><li><p>git push origin —delete dev-190304-bigPlan</p><p>删除名为“dev-190304-bigPlan”的远程</p></li></ol><h3 id="【学习Git的网站】"><a href="#【学习Git的网站】" class="headerlink" title="【学习Git的网站】"></a>【学习Git的网站】</h3><ol><li><p>廖雪峰的官方网站 Git教程</p><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p></li><li><p>易百教程 Git教程</p><p><a href="https://www.yiibai.com/git" target="_blank" rel="noopener">https://www.yiibai.com/git</a></p></li><li><p>RUNOOB Git 教程</p><p><a href="http://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/git/git-tutorial.html</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【git-branch】&quot;&gt;&lt;a href=&quot;#【git-branch】&quot; class=&quot;headerlink&quot; title=&quot;【git branch】&quot;&gt;&lt;/a&gt;【git branch】&lt;/h3&gt;&lt;p&gt;一般用于分支的操作，比如查看分支、创建分支等&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="https://blog.moremoney.ink/categories/Git/"/>
    
    
      <category term="命令行" scheme="https://blog.moremoney.ink/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>《Redis实战》读书笔记（一）</title>
    <link href="https://blog.moremoney.ink/2019/03/04/%E3%80%8ARedis%E5%AE%9E%E6%88%98%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://blog.moremoney.ink/2019/03/04/《Redis实战》读书笔记（一）/</id>
    <published>2019-03-04T00:45:47.000Z</published>
    <updated>2019-03-04T03:18:25.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【Redis简介】"><a href="#【Redis简介】" class="headerlink" title="【Redis简介】"></a>【Redis简介】</h3><p>Redis是一个速度非常快的非关系数据库，它可以存储键与5种不同数据类型的值之间的映射，可以讲存储在内存的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，还可以使用客户端分片来扩展写性能。</p><a id="more"></a><h3 id="【附加特性】"><a href="#【附加特性】" class="headerlink" title="【附加特性】"></a>【附加特性】</h3><p>当服务器关闭时，服务器存储的数据将何去何从？可以使用Redis提供的两种不同形式的持久化方式，它们都可以用小而紧凑的的格式将存储在内存的数据写入硬盘。</p><ol><li><p>RDB 在指定的时间间隔能对你的数据进行快照存储。</p><p>将Reids在内存中的数据库记录定时dump到磁盘上的RDB持久化</p></li><li><p>append-only </p></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【Redis简介】&quot;&gt;&lt;a href=&quot;#【Redis简介】&quot; class=&quot;headerlink&quot; title=&quot;【Redis简介】&quot;&gt;&lt;/a&gt;【Redis简介】&lt;/h3&gt;&lt;p&gt;Redis是一个速度非常快的非关系数据库，它可以存储键与5种不同数据类型的值之间的映射，可以讲存储在内存的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，还可以使用客户端分片来扩展写性能。&lt;/p&gt;
    
    </summary>
    
      <category term="NoSQL" scheme="https://blog.moremoney.ink/categories/NoSQL/"/>
    
    
      <category term="读书笔记" scheme="https://blog.moremoney.ink/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>小躁动和小忙碌</title>
    <link href="https://blog.moremoney.ink/2019/03/03/%E5%B0%8F%E8%BA%81%E5%8A%A8%E5%92%8C%E5%B0%8F%E5%BF%99%E7%A2%8C/"/>
    <id>https://blog.moremoney.ink/2019/03/03/小躁动和小忙碌/</id>
    <published>2019-03-03T14:47:04.000Z</published>
    <updated>2019-03-04T03:12:20.863Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【小焦虑】"><a href="#【小焦虑】" class="headerlink" title="【小焦虑】"></a>【小焦虑】</h3><p>我从去年年底开始，焦虑感倍增，总想着自己的竞争力在下降。今年开年来，跟朋友聊了好多，也去外面走了走，感觉自己的技术能力还是不符合自己的期望的（我期望自己在技术这条道路上，走远走深）。与其焦虑，还不如好好努力，做好每一天，让每一天都有进步，用实际行动，来缓解焦虑。我觉得最好的实际行动，应该就是“不断努力地做正确的事情”。</p><a id="more"></a><h3 id="【小忙碌】"><a href="#【小忙碌】" class="headerlink" title="【小忙碌】"></a>【小忙碌】</h3><p>开年以来，手头项目不少，尤其还有个不太受我控制的，依赖第三方的，道闸的对接，迟迟没有对接好。也是耗时耗力。最近这两个礼拜，把筹划的搬家事宜，风风火火全部搞定了，可怜了我的腰，酸痛……</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;【小焦虑】&quot;&gt;&lt;a href=&quot;#【小焦虑】&quot; class=&quot;headerlink&quot; title=&quot;【小焦虑】&quot;&gt;&lt;/a&gt;【小焦虑】&lt;/h3&gt;&lt;p&gt;我从去年年底开始，焦虑感倍增，总想着自己的竞争力在下降。今年开年来，跟朋友聊了好多，也去外面走了走，感觉自己的技术能力还是不符合自己的期望的（我期望自己在技术这条道路上，走远走深）。与其焦虑，还不如好好努力，做好每一天，让每一天都有进步，用实际行动，来缓解焦虑。我觉得最好的实际行动，应该就是“不断努力地做正确的事情”。&lt;/p&gt;
    
    </summary>
    
      <category term="关于我" scheme="https://blog.moremoney.ink/categories/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
    
      <category term="近况" scheme="https://blog.moremoney.ink/tags/%E8%BF%91%E5%86%B5/"/>
    
  </entry>
  
  <entry>
    <title>你确定了解Java的Integer吗？</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E4%BD%A0%E7%A1%AE%E5%AE%9A%E4%BA%86%E8%A7%A3Java%E7%9A%84Integer%E5%90%97%EF%BC%9F/"/>
    <id>https://blog.moremoney.ink/2019/03/02/你确定了解Java的Integer吗？/</id>
    <published>2019-03-02T14:38:13.000Z</published>
    <updated>2019-03-03T14:41:09.429Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>这两天在看Java的基础，看到Integer相关的内容，同时想起3年前一个大佬曾经面试过我这块，今天做个总结。</p><a id="more"></a><p>Java声称一切皆为对象，实际上也有一个例外：原始数据类型（Primitive Types）。一共有8个，分别是：boolean、byte 、short、char、int、float、double、long。他们不具备对象的特性，也没有自己的方法。</p><p>Integer，是int的包装类，从源码可知，Integer包含一个int型的字段value，用于存储数据，该value字段是final类型的，即生成了一个Integer对象后，该对象的数据值是不可更改的。还有两个常量MIN_VALUE表示int的最小值，MAX_VALUE表示int的最大值，即范围-2^31到2^31-1。</p><p>相比于原始数据类型，Integer封装了常用的一些方法，比如字符串转Integer，大小比较等。Java可以根据上下文，自动进行装箱拆箱，极大地简化大家平日的开发工作。</p><p>稍微有些开发经验的同学，应该也知道，Integer有个值缓存的机制。我们好好聊聊这个值缓存。</p><p>Java对象的创建，一般都是通过new的方式，Integer传统的方式也是如此。其实，通过观察和经验总结，发现大部分数据操作都集中在有限的、较小的范围内，那其实可以参考一般的缓存思想，虚拟机事先就提供好常用的Integer对象，那就可以有效的改进性能了。</p><p>虚拟机默认提供的Integer对象，值的范围是从-128到127。如果确定系统常用的数值超过这个范围，也可以通过-XX:AutoBoxCacheMax=N启动参数，来修改范围上限，目前没看到可以修改下限的方式，可以自己做缓存。</p><p>如果面试的时候，一时忘记了Integer的值缓存，我们可以怎么来证明呢。我自己想到的一个思路：如果对象确实是有缓存的，那么每次拿到的Integer对象应该都是相等的（内存地址相同）；否则，每次新创建，那么他们的内存地址肯定是不同的。大家有其他思路的也可以说一下。</p><p>开发中，经常会遇到类型转换，比如String转Integer，一般我们会使用Integer提供的Integer.parseInt(str)或Integer.valueOf(str)，那么这两个方法有什么区别吗？</p><p>先看一段测试代码：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHQxf8VS5DAOyppU4Zz2ZQF44IWsv77NNsqWI0d8icDLjDBXLmMARAh3ULoEOnZFUeDvRf3ZfVQ55w/640?wx_fmt=jpeg" alt="img"></p><p>发现Integer.parseInt(str)所花费的时间基本还是比较稳定的，没有剧增；Integer.valueOf(“1”)的时候也是比较稳定，Integer.valueOf(“1000”)的时候随着运行次数的增加，耗时就急剧增大。</p><p>为什么会这样呢？源码可以告诉我们答案。</p><p>Integer.valueOf(str)的源代码：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHQxf8VS5DAOyppU4Zz2ZQFnARfsx4g1BA4VLaNxegjs3ZhKialDy69iaws6vf59hibIMicWdu3GTOPFw/640?wx_fmt=jpeg" alt="img"></p><p>Integer.valueOf(str)是Integer的静态工厂方法，值缓存就是通过这个方法体现的。源码逻辑很清晰，如果 i 的值在范围内，则直接返回缓存的对象，如果超过范围，则new一个新对象，所以Integer.valueOf(“1”)始终返回的都是同一个对象，并且这个对象是存储在数组中的，数组访问是很快的。而Integer.valueOf(“1000”)，显然就是走了return new Integer(i)这句代码，只要调用Integer.valueOf(“1000”)就会创建一个Integer对象，创建对象相对于数组直接访问获取明显就慢多了，同时还占用了存储空间。这个方法最后返回的是Integer对象。</p><p>Integer.parseInt(str)的源码比较多，我就不贴上来了，大家有兴趣自己可以去看一下。大致思路就是通过把原始的字符串拆分出一个一个的字符然后通过计算得出最终的int值，需要考虑正负符号。方法返回的是int原始数据类型，没有创建Integer对象。所以调用这个方法，耗时大小主要就看这个算法了，显然JDK团队的能力是毋庸置疑的。</p><p>通过源码阅读和代码测试，我们做到了知其然知其所以然。</p><p>大部分同学还是以应用层开发为主，考虑更多的是便捷性和易用性。某些场景出于性能的考虑，则需要大家多动一下脑筋，选择更好的方式去完成需求。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这两天在看Java的基础，看到Integer相关的内容，同时想起3年前一个大佬曾经面试过我这块，今天做个总结。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.moremoney.ink/categories/Java/"/>
    
    
      <category term="基础" scheme="https://blog.moremoney.ink/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Java如何准确判断是Excel文件</title>
    <link href="https://blog.moremoney.ink/2019/03/02/Java%E5%A6%82%E4%BD%95%E5%87%86%E7%A1%AE%E5%88%A4%E6%96%AD%E6%98%AFExcel%E6%96%87%E4%BB%B6/"/>
    <id>https://blog.moremoney.ink/2019/03/02/Java如何准确判断是Excel文件/</id>
    <published>2019-03-02T14:35:13.000Z</published>
    <updated>2019-03-03T14:41:32.276Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>这两天逛guthub，看到一个Java操作Excel文件的项目，突然想到我们公司的WEB应用，也经常会涉及到Excel的操作，比如说很常用的Excel文件导入。</p><p>那么我们是如何判断出，上传的文件确实是Excel文件呢？</p><a id="more"></a><p>我翻阅了一下我们系统里面的代码，常见的写法如下：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFdwScsREYzkGRYAXiaicIIqyOgRYlMWFGB5vjAqr9IpqdvzqGbZTicpKBPJSReU2OWdDrAUoRnTHAmA/640?wx_fmt=jpeg" alt="img"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFdwScsREYzkGRYAXiaicIIqys6ia0MBQPHWjXa8IKysBmz6PLUDFkTc0DnM1xWdTq4PHVuZbdJNP6Iw/640?wx_fmt=jpeg" alt="img"></p><p>做法很简单，就是直接获取文件名，取最后一个“.”符号后面的字符串，然后判断字符串是否属于xls、xlsx。</p><p>仔细想一下，其实这里面有很多漏洞。比如一个恶意的“用户”传上来的是一张改了扩展名为xlsx的图片，那我们系统处理的时候就会产生异常；或者那些原本就是Excel文件，但是没有扩展名的，其实也应该能够正常导入；或者一些恶意的“用户”可能会绕过这个校验，搞一些小破坏……</p><p>我在这个github项目里面，看到作者使用了POI的FileMagic类，一看名字，我有点思路了。我想起来，以前看JVM的书籍的时候，看到过魔数这个概念，英文叫做“Magic Number”。说法是：每个Class文件的头4个字节称为魔数，它的唯一作用是用于确定这个文件是否为一个能被虚拟机接收的Class文件。</p><p>我拓展开来，是不是这些不同类型的文件都有属于自己的魔数呢？</p><p>百度了一下，确实，一般类型的文件都有特定的魔数：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFdwScsREYzkGRYAXiaicIIqy5FAN78GAwafJU05nvLNtIVzFiaqQGicFD7ZYGYCweIwbyUicicYohHNibcA/640?wx_fmt=jpeg" alt="img"></p><p>我查阅资料和POI工具的源码，发现xlsx文件的魔数十六进制的表示法是：0x50, 0x4b。</p><p>为了验证是否存在这个魔数，我创建了一个Excel文件，保存为test.xlsx，然后把这个文件的扩展名改成txt，方便我用sublime text打开他。打开之后看到文件最开始的字节，就是0x50, 0x4b。如下：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFdwScsREYzkGRYAXiaicIIqy3TmticleYQpicE6f6WRwHCkl1JtKBOuYSmkFkE33nAS8AFM5xJb0LTRg/640?wx_fmt=jpeg" alt="img"></p><p>自此，思路就清晰了，我们可以通过判断文件的魔数，确定用户上传的文件的类型是否是我们想要的类型。可以写成这样的代码：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFdwScsREYzkGRYAXiaicIIqyeCjxgsMl5PWp93jgm25JGd828HqLvRzqkODGH8UcNPqz1LLRoujD8A/640?wx_fmt=jpeg" alt="img"></p><p>注意一下，只有3.17及以上的POI版本才有FileMagic类，否则的话你也自己去写相关的代码了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这两天逛guthub，看到一个Java操作Excel文件的项目，突然想到我们公司的WEB应用，也经常会涉及到Excel的操作，比如说很常用的Excel文件导入。&lt;/p&gt;
&lt;p&gt;那么我们是如何判断出，上传的文件确实是Excel文件呢？&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.moremoney.ink/categories/Java/"/>
    
    
      <category term="技巧" scheme="https://blog.moremoney.ink/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>爬了杭州的租房数据，原来……</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E7%88%AC%E4%BA%86%E6%9D%AD%E5%B7%9E%E7%9A%84%E7%A7%9F%E6%88%BF%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%8E%9F%E6%9D%A5%E2%80%A6%E2%80%A6/"/>
    <id>https://blog.moremoney.ink/2019/03/02/爬了杭州的租房数据，原来……/</id>
    <published>2019-03-02T14:30:43.000Z</published>
    <updated>2019-03-03T14:41:14.532Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>在外打工，大部分人每个月总要花一笔钱在租房上面，一起来看看杭州的租房情况。</p><p>数据来源是F天下，该网站，按照百度的说法：“是全球最大的房地产家居网络平台”，数据源靠谱。</p><a id="more"></a><p>一共爬取到15485条出租房源数据，按照区域分布如下：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHCEr3EqRruxJpBbTGGscvyx5h6DANoSAhxRjTWJE0Yo6fntfkgX5FAC5yfqOxKwQpICkxbP3lj9A/640?wx_fmt=jpeg" alt="img"></p><h2 id="【数据分析】"><a href="#【数据分析】" class="headerlink" title="【数据分析】"></a>【数据分析】</h2><h3 id="一、房源分布"><a href="#一、房源分布" class="headerlink" title="一、房源分布"></a>一、房源分布</h3><p>我们可以清晰地看到，几大城区，房源数量基本上都比较接近。上下两城和拱墅较少一点，这也符合实际情况，近几年杭州往外扩，余杭、萧山、滨江等地区房源自然也多了。后面5个周边，桐庐、富阳、临安、建德、杭州周边，房源较少。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlHCEr3EqRruxJpBbTGGscvyxpib6kUkIBW6PHTjmtceicwxbjB4miavDox4msQOTReDTaDqZepfGpr4A/640?wx_fmt=png" alt="img"></p><h3 id="二、租金差异"><a href="#二、租金差异" class="headerlink" title="二、租金差异"></a>二、租金差异</h3><p>标价大，不一定就代表实际租金高，还需要考虑标价对应的出租面积，比如A房源4000块每月（面积150平米），B房源2600块每月（面积50平米），显然不能直接说4000块每月的贵。得把月租金，均摊到每平米，就能做出公平的比较。即一平米每月需要多少钱：</p><p>A房源：4000块每月 / 150平米 = 26.67</p><p>B房源：2600块每月 /  50平米  =  52</p><p>计算之后发现B房源更贵。</p><p>按照这个思路，我们计算出各个地区，一平米每月多少价格。计算的是平均数：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHCEr3EqRruxJpBbTGGscvymGzGoiaFfzckqMgMqzwxL9D9GJSia3ic6seoGYEIrzCkhdgQKnbGMMO8Q/640?wx_fmt=jpeg" alt="img"></p><p>数值做了四舍五入，取整。其中江干、西湖、滨江、上城，价格都超过了50。</p><p>我们来计算一下各主要城区，租住一间20平米的房间，房租平均要花费多少钱：</p><p>江干：20 * 55 = 1100 </p><p>余杭：38 * 20 = 760</p><p>西湖：53 * 20 = 1060</p><p>萧山：40 * 20 = 800</p><p>滨江：60 * 20 = 1200</p><p>下城：47 * 20 = 940</p><p>上城：68 * 20 = 1360</p><p>拱墅：45 * 20 = 900</p><p>大家可以看下自己是高于平均还是低于平均。总体上，房租每个月花费1000，在杭州基本是少不了的。</p><p>这个统计，和我们平时的认知还是比较符合的，越往周边，租金越便宜。滨江，互联网公司较多，里面有好多拿着高工资的程序员、产品经理，他们消费能力强，当地的租金自然也水涨船高了。</p><p>从图表来看，余杭相对来说租金较便宜，如果不计较路程的话，租住在余杭也是个不错的选择。</p><h3 id="三、租住方式"><a href="#三、租住方式" class="headerlink" title="三、租住方式"></a>三、租住方式</h3><p>整租数量最大：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHCEr3EqRruxJpBbTGGscvywtcraeDWkDR33qeDEeUWEMQXOZQjGosshwLrcx4NKaoc3P39ovgSlw/640?wx_fmt=jpeg" alt="img"></p><h3 id="四、户型"><a href="#四、户型" class="headerlink" title="四、户型"></a>四、户型</h3><p>经过统计，1室1厅、3室2厅、2室1厅、2室2厅最多，都是主流户型。再其他的户型，数量就很少了，我把他们合并成了“其他”：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlHCEr3EqRruxJpBbTGGscvyunPfmZRDtW1DciaqTMjwGx0AzzJmyctqCKiaa63VJ1yODVNNxDtJ4IicA/640?wx_fmt=jpeg" alt="img"></p><h3 id="五、房屋特色"><a href="#五、房屋特色" class="headerlink" title="五、房屋特色"></a>五、房屋特色</h3><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlEaTlTIWGKI1VXHaicnMEsoh6qpdffQONExvK88662a7I26flFvUIlWicq5icP3NGibxyAJKZ3t1uUoKw/640?wx_fmt=png" alt="img"></p><p>这个统计，可以很清晰的看出卖家的营销套路，基本都是给房源标上类似“拎包入住”、“随时看房”、“随时入住”、“家电齐全”、“南北通透”。</p><p>这个从侧面也说明了，大家租房会比较看重：是否能够直接、简便的入住。</p><p>图中“合租男生”、“合租女生”看不太清，实际上这两个是差了一倍的，虽然数据样本总体不算大，但还是能看出来女生更受欢迎一些，我猜想可能是女生比较爱干净吧。</p><p>其实还有更多有意思的分析，篇幅原因，就分析到这里了。</p><h2 id="【原始数据】"><a href="#【原始数据】" class="headerlink" title="【原始数据】"></a>【原始数据】</h2><p>原始数据提取地址如下：</p><p><a href="https://pan.baidu.com/s/1m3JXHFsmqg0StTFWmnKx3Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1m3JXHFsmqg0StTFWmnKx3Q</a></p><h2 id="【代码】"><a href="#【代码】" class="headerlink" title="【代码】"></a>【代码】</h2><p>数据源：F天下（机智的你，应该知道是哪个网站）的租房栏目</p><p>只需要创建两张表，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">BEGIN;</span><br><span class="line"></span><br><span class="line">### 房天下所有城市的主页信息</span><br><span class="line">DROP TABLE IF EXISTS `sou_fang_city_index`;</span><br><span class="line">CREATE TABLE `sou_fang_city_index` (</span><br><span class="line">  `id`             INT         NOT NULL AUTO_INCREMENT</span><br><span class="line">  COMMENT &apos;数据库自增ID&apos;,</span><br><span class="line">  `create_time`    DATETIME    NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据创建时间&apos;,</span><br><span class="line">  `modify_time`    DATETIME    NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据修改时间&apos;,</span><br><span class="line"></span><br><span class="line">  `province_name`  VARCHAR(40) NULL</span><br><span class="line">  COMMENT &apos;省份名称&apos;,</span><br><span class="line">  `city_name`      VARCHAR(10) NOT NULL</span><br><span class="line">  COMMENT &apos;城市名称&apos;,</span><br><span class="line">  `city_index_url` VARCHAR(40) NOT NULL</span><br><span class="line">  COMMENT &apos;城市首页链接&apos;,</span><br><span class="line"></span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk`(`city_index_url`)</span><br><span class="line">)</span><br><span class="line">  ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8mb4</span><br><span class="line">  COMMENT = &apos;房天下所有城市的主页信息&apos;;</span><br><span class="line"></span><br><span class="line"># 房天下租房数据</span><br><span class="line">DROP TABLE IF EXISTS `sou_fang_renting`;</span><br><span class="line">CREATE TABLE `sou_fang_renting` (</span><br><span class="line">  `id`            INT          NOT NULL AUTO_INCREMENT</span><br><span class="line">  COMMENT &apos;数据库自增ID&apos;,</span><br><span class="line">  `create_time`   DATETIME     NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据创建时间&apos;,</span><br><span class="line">  `modify_time`   DATETIME     NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据修改时间&apos;,</span><br><span class="line"></span><br><span class="line">  `city_index_id` INT          NOT NULL</span><br><span class="line">  COMMENT &apos;sou_fang_city_index的自增ID&apos;,</span><br><span class="line">  `province_name` VARCHAR(40)  NULL</span><br><span class="line">  COMMENT &apos;省份名称&apos;,</span><br><span class="line">  `city_name`     VARCHAR(10)  NOT NULL</span><br><span class="line">  COMMENT &apos;城市名称&apos;,</span><br><span class="line">  `area_name`     VARCHAR(20)  NOT NULL</span><br><span class="line">  COMMENT &apos;区域名称&apos;,</span><br><span class="line"></span><br><span class="line">  `detail_url`    VARCHAR(120) NOT NULL</span><br><span class="line">  COMMENT &apos;房屋详情的url&apos;,</span><br><span class="line"></span><br><span class="line">  `name`          VARCHAR(50)</span><br><span class="line">  COMMENT &apos;名称&apos;,</span><br><span class="line">  `rent_way`      VARCHAR(4)</span><br><span class="line">  COMMENT &apos;出租方式&apos;,</span><br><span class="line">  `door_model`    VARCHAR(4)</span><br><span class="line">  COMMENT &apos;户型&apos;,</span><br><span class="line">  `area`          VARCHAR(10)</span><br><span class="line">  COMMENT &apos;建筑面积&apos;,</span><br><span class="line">  `toward`        VARCHAR(10)</span><br><span class="line">  COMMENT &apos;朝向&apos;,</span><br><span class="line">  `unit_price`    VARCHAR(10)</span><br><span class="line">  COMMENT &apos;单价&apos;,</span><br><span class="line">  `feature`       VARCHAR(100)</span><br><span class="line">  COMMENT &apos;特色&apos;,</span><br><span class="line"></span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY (`detail_url`)</span><br><span class="line">)</span><br><span class="line">  ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8mb4</span><br><span class="line">  COMMENT = &apos;房天下租房数据&apos;;</span><br><span class="line"></span><br><span class="line"># 搜房网-小区详情首页-小区详情-原始数据</span><br><span class="line">DROP TABLE IF EXISTS `fang_community_detail`;</span><br><span class="line">CREATE TABLE `fang_community_detail` (</span><br><span class="line">  `id`                        INT      NOT NULL AUTO_INCREMENT</span><br><span class="line">  COMMENT &apos;数据库自增ID&apos;,</span><br><span class="line">  `create_time`               DATETIME NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据创建时间&apos;,</span><br><span class="line">  `modify_time`               DATETIME NOT NULL DEFAULT &apos;1970-01-01 00:00:01&apos;</span><br><span class="line">  COMMENT &apos;数据修改时间&apos;,</span><br><span class="line"></span><br><span class="line">  `community_id`              INT      NOT NULL</span><br><span class="line">  COMMENT &apos;fang_community的自增ID&apos;,</span><br><span class="line"></span><br><span class="line">  # 基本信息</span><br><span class="line">  `address`                   VARCHAR(128)</span><br><span class="line">  COMMENT &apos;小区地址&apos;,</span><br><span class="line">  `area`                      VARCHAR(32)</span><br><span class="line">  COMMENT &apos;所属区域&apos;,</span><br><span class="line">  `postcode`                  VARCHAR(8)</span><br><span class="line">  COMMENT &apos;邮编&apos;,</span><br><span class="line">  `property_description`      VARCHAR(32)</span><br><span class="line">  COMMENT &apos;产权描述&apos;,</span><br><span class="line">  `property_category`         VARCHAR(8)</span><br><span class="line">  COMMENT &apos;物业类别&apos;,</span><br><span class="line">  `completion_time`           VARCHAR(20)</span><br><span class="line">  COMMENT &apos;竣工时间&apos;,</span><br><span class="line">  `building_type`             VARCHAR(64)</span><br><span class="line">  COMMENT &apos;建筑类别&apos;,</span><br><span class="line">  `building_area`             VARCHAR(32)</span><br><span class="line">  COMMENT &apos;建筑面积&apos;,</span><br><span class="line">  `floor_area`                VARCHAR(32)</span><br><span class="line">  COMMENT &apos;占地面积&apos;,</span><br><span class="line">  `current_number`            VARCHAR(10)</span><br><span class="line">  COMMENT &apos;当期户数&apos;,</span><br><span class="line">  `total_number`              VARCHAR(10)</span><br><span class="line">  COMMENT &apos;总户数&apos;,</span><br><span class="line">  `greening_rate`             VARCHAR(10)</span><br><span class="line">  COMMENT &apos;绿化率&apos;,</span><br><span class="line">  `plot_ratio`                VARCHAR(10)</span><br><span class="line">  COMMENT &apos;容积率&apos;,</span><br><span class="line">  `property_fee`              VARCHAR(20)</span><br><span class="line">  COMMENT &apos;物业费&apos;,</span><br><span class="line">  `property_office_telephone` VARCHAR(100)</span><br><span class="line">  COMMENT &apos;物业办公电话&apos;,</span><br><span class="line">  `property_office_location`  VARCHAR(40)</span><br><span class="line">  COMMENT &apos;物业办公地点&apos;,</span><br><span class="line">  `additional_information`    VARCHAR(32)</span><br><span class="line">  COMMENT &apos;附加信息&apos;,</span><br><span class="line"></span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY (`community_id`)</span><br><span class="line">)</span><br><span class="line">  ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8mb4</span><br><span class="line">  COMMENT = &apos;搜房网-小区详情首页-小区详情-原始数据&apos;;</span><br><span class="line"></span><br><span class="line">COMMIT;</span><br></pre></td></tr></table></figure><p>我先是爬取了所有的城市数据，虽然我们这次只关心杭州的情况，不过抓下来所有的城市，以后也用得到。打开网站我就去找Json数据API，发现并没有，所以只能采取普通的提取页面数据的方式来获取数据了。具体的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">增量爬取</span><br><span class="line">房天下-所有城市的主页</span><br><span class="line">该爬虫，一般情况只需要爬取一次就够了：因为中国的城市变化，个人觉得是不频繁的</span><br><span class="line">页面：http://www.fang.com/SoufunFamily.htm</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">from scrapy import Selector</span><br><span class="line">from scrapy.spiders import Spider</span><br><span class="line"></span><br><span class="line">from thor_crawl.spiders.spider_setting import DEFAULT_DB_ENV</span><br><span class="line">from thor_crawl.utils.commonUtil import CommonUtil</span><br><span class="line">from thor_crawl.utils.db.daoUtil import DaoUtils</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CityIndex(Spider):</span><br><span class="line">    name = &apos;sou_fang_city_index&apos;</span><br><span class="line">    handle_httpstatus_list = [204, 206, 404, 500]</span><br><span class="line"></span><br><span class="line">    start_urls = [&apos;http://www.fang.com/SoufunFamily.htm&apos;]</span><br><span class="line"></span><br><span class="line">    def __init__(self, *args, **kwargs):</span><br><span class="line">        super().__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">        # ============ 工具 ============</span><br><span class="line">        self.dao = DEFAULT_DB_ENV</span><br><span class="line">        self.common_util = CommonUtil()</span><br><span class="line"></span><br><span class="line">        # ============ 持久化相关变量定义 ============</span><br><span class="line">        self.save_threshold = 20  # 一次性插入数据库阈值</span><br><span class="line">        self.persistent_data = list()  # 内存暂存处理的数据，批量插入数据库</span><br><span class="line">        self.main_table = &apos;sou_fang_city_index&apos;  # 数据库存储表</span><br><span class="line"></span><br><span class="line">    def __del__(self):</span><br><span class="line">        self.save_final()</span><br><span class="line"></span><br><span class="line">    def closed(self, res):</span><br><span class="line">        self.save_final()</span><br><span class="line"></span><br><span class="line">    def parse(self, response):</span><br><span class="line">        try:</span><br><span class="line">            body = response.body.decode(&apos;gb18030&apos;).encode(&apos;utf-8&apos;)</span><br><span class="line">        except UnicodeDecodeError as e:</span><br><span class="line">            print(e)</span><br><span class="line">            body = response.body</span><br><span class="line">        hxf = Selector(text=body)</span><br><span class="line"></span><br><span class="line">        trs = hxf.xpath(&apos;//div[@id=&quot;c02&quot;]/table/tr&apos;)  # 获取所有的行数据</span><br><span class="line">        this_province = &apos;未知&apos;</span><br><span class="line"></span><br><span class="line">        for tr in trs[:-1]:</span><br><span class="line">            province_name = self.common_util.get_extract(tr.xpath(&apos;td[2]/strong/text()&apos;))  # 获取省份名称文本值</span><br><span class="line">            this_province = this_province if province_name is None or province_name == &apos;&apos; else province_name  # 为空的话取之前的省份名称</span><br><span class="line"></span><br><span class="line">            cities = tr.xpath(&apos;td[3]/a&apos;)  # 获取所有的城市列表</span><br><span class="line">            for city in cities:</span><br><span class="line">                city_name = self.common_util.get_extract(city.xpath(&apos;text()&apos;))  # 获取城市名称文本值</span><br><span class="line">                city_index_url = self.common_util.get_extract(city.xpath(&apos;@href&apos;))  # 获取城市首页链接</span><br><span class="line">                self.persistent_data.append(</span><br><span class="line">                    &#123;</span><br><span class="line">                        &apos;province_name&apos;: this_province,</span><br><span class="line">                        &apos;city_name&apos;: city_name,</span><br><span class="line">                        &apos;city_index_url&apos;: city_index_url</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">        self.save()</span><br><span class="line"></span><br><span class="line">    def save(self):</span><br><span class="line">        if len(self.persistent_data) &gt; self.save_threshold:</span><br><span class="line">            try:</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">            except AttributeError as e:</span><br><span class="line">                self.dao = DaoUtils()</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">                print(&apos;save except:&apos;, e)</span><br><span class="line">            finally:</span><br><span class="line">                self.persistent_data = list()</span><br><span class="line"></span><br><span class="line">    def save_final(self):</span><br><span class="line">        if len(self.persistent_data) &gt; 0:</span><br><span class="line">            try:</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">            except AttributeError as e:</span><br><span class="line">                self.dao = DaoUtils()</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">                print(&apos;save_final except:&apos;, e)</span><br><span class="line">            finally:</span><br><span class="line">                self.persistent_data = list()</span><br></pre></td></tr></table></figure><p>然后是爬取杭州所有的出租房源数据，思路是通过杭州这个城市站的首页的“租房”菜单，进入房源列表，然后，根据不同的城区，去爬取数据，具体代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">搜房网-租房信息</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">import scrapy</span><br><span class="line">from scrapy import Selector</span><br><span class="line">from scrapy.spiders import Spider</span><br><span class="line"></span><br><span class="line">from thor_crawl.spiders.spider_setting import DEFAULT_DB_ENV</span><br><span class="line">from thor_crawl.utils.commonUtil import CommonUtil</span><br><span class="line">from thor_crawl.utils.db.daoUtil import DaoUtils</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Renting(Spider):</span><br><span class="line">    name = &apos;sou_fang_renting&apos;</span><br><span class="line">    handle_httpstatus_list = [302, 204, 206, 404, 500]</span><br><span class="line"></span><br><span class="line">    start_urls = [&apos;http://www.souFang.com/SoufunFamily.htm&apos;]</span><br><span class="line"></span><br><span class="line">    def __init__(self, *args, **kwargs):</span><br><span class="line">        super().__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">        # ============ 工具 ============</span><br><span class="line">        self.dao = DEFAULT_DB_ENV</span><br><span class="line">        self.common_util = CommonUtil()</span><br><span class="line"></span><br><span class="line">        # ============ 持久化相关变量定义 ============</span><br><span class="line">        self.save_threshold = 20  # 一次性插入数据库阈值</span><br><span class="line">        self.persistent_data = list()  # 内存暂存处理的数据，批量插入数据库</span><br><span class="line">        self.main_table = &apos;sou_fang_renting&apos;  # 数据库存储表</span><br><span class="line"></span><br><span class="line">        # ============ 业务 ============</span><br><span class="line">        province_name = &apos;浙江&apos;</span><br><span class="line">        city_name = &apos;杭州&apos;</span><br><span class="line">        self.target = &apos;SELECT id, province_name, city_name, city_index_url &apos; \</span><br><span class="line">                      &apos;FROM sou_fang_city_index &apos; \</span><br><span class="line">                      &apos;WHERE province_name = &quot;&#123;province_name&#125;&quot; and city_name = &quot;&#123;city_name&#125;&quot;&apos;.format(province_name=province_name, city_name=city_name)</span><br><span class="line">        self.url_template = &apos;http://&#123;city_code&#125;.zu.fang.com/&apos;  # 租房首页的模板URL</span><br><span class="line"></span><br><span class="line">    def __del__(self):</span><br><span class="line">        self.save_final()</span><br><span class="line"></span><br><span class="line">    def start_requests(self):</span><br><span class="line">        start_requests = list()</span><br><span class="line">        for row in self.dao.get_all(self.target):</span><br><span class="line">            if row[&apos;city_index_url&apos;] != &apos;&apos;:</span><br><span class="line">                meta = &#123;</span><br><span class="line">                    &apos;city_index_id&apos;: row[&apos;id&apos;],</span><br><span class="line">                    &apos;province_name&apos;: row[&apos;province_name&apos;],</span><br><span class="line">                    &apos;city_name&apos;: row[&apos;city_name&apos;]</span><br><span class="line">                &#125;</span><br><span class="line">                url = self.url_template.format(city_code=re.search(r&apos;http://(.+)\.fang\.com&apos;, row[&apos;city_index_url&apos;]).group(1))</span><br><span class="line">                start_requests.append(scrapy.FormRequest(url=url, method=&apos;GET&apos;, meta=meta))</span><br><span class="line">        return start_requests</span><br><span class="line"></span><br><span class="line">    def closed(self, res):</span><br><span class="line">        self.save_final()</span><br><span class="line"></span><br><span class="line">    # 拿到所有的地区，去掉&quot;不限&quot;</span><br><span class="line">    def parse(self, response):</span><br><span class="line">        try:</span><br><span class="line">            body = response.body.decode(&apos;gb18030&apos;).encode(&apos;utf-8&apos;)</span><br><span class="line">        except UnicodeDecodeError as e:</span><br><span class="line">            print(e)</span><br><span class="line">            body = response.body</span><br><span class="line">        meta = response.meta</span><br><span class="line">        url = response.url</span><br><span class="line">        hxf = Selector(text=body)</span><br><span class="line"></span><br><span class="line">        a_tag_list = hxf.xpath(&apos;//dl[@id=&quot;rentid_D04_01&quot;]/dd/a&apos;)</span><br><span class="line">        print(&apos;a_tag_list len: &apos;, len(a_tag_list))</span><br><span class="line"></span><br><span class="line">        if a_tag_list is None or len(a_tag_list) &lt;= 1:</span><br><span class="line">            print(&apos;------parse, no data in &apos;, meta[&apos;province_name&apos;], meta[&apos;city_name&apos;])</span><br><span class="line">        else:</span><br><span class="line">            for a_tag in a_tag_list:</span><br><span class="line">                meta[&apos;area_name&apos;] = self.common_util.get_extract(a_tag.xpath(&apos;text()&apos;))</span><br><span class="line">                meta[&apos;area_url&apos;] = self.common_util.get_extract(a_tag.xpath(&apos;@href&apos;))</span><br><span class="line">                meta[&apos;base_url&apos;] = url</span><br><span class="line"></span><br><span class="line">                if meta[&apos;area_name&apos;] is not None and meta[&apos;area_name&apos;] != &apos;&apos; and meta[&apos;area_name&apos;] != &apos;不限&apos;:</span><br><span class="line">                    print(url + meta[&apos;area_url&apos;])</span><br><span class="line">                    yield scrapy.FormRequest(url=url + meta[&apos;area_url&apos;], method=&apos;GET&apos;, meta=meta, callback=self.parse_area)</span><br><span class="line"></span><br><span class="line">    def parse_area(self, response):</span><br><span class="line">        try:</span><br><span class="line">            body = response.body.decode(&apos;gb18030&apos;).encode(&apos;utf-8&apos;)</span><br><span class="line">        except UnicodeDecodeError as e:</span><br><span class="line">            print(e)</span><br><span class="line">            body = response.body</span><br><span class="line">        meta = response.meta</span><br><span class="line">        url = response.url</span><br><span class="line">        hxf = Selector(text=body)</span><br><span class="line"></span><br><span class="line">        dl_tag_list = hxf.xpath(&apos;//div[@class=&quot;houseList&quot;]/dl&apos;)</span><br><span class="line">        print(&apos;dl_tag_list len: &apos;, len(dl_tag_list))</span><br><span class="line"></span><br><span class="line">        if dl_tag_list is None or len(dl_tag_list) &lt;= 1:</span><br><span class="line">            print(&apos;------parse_area, no data in &apos;, meta[&apos;province_name&apos;], meta[&apos;city_name&apos;], meta[&apos;area_name&apos;])</span><br><span class="line">        else:</span><br><span class="line">            for dl_tag in dl_tag_list:</span><br><span class="line">                feature = &apos;&apos;</span><br><span class="line">                feature_span_list = dl_tag.xpath(&apos;dd/p[5]/span&apos;)</span><br><span class="line">                for feature_span in feature_span_list:</span><br><span class="line">                    feature += self.common_util.get_extract(feature_span.xpath(&apos;text()&apos;)) + &apos;,&apos;</span><br><span class="line">                feature = feature[:-1] if len(feature) &gt; 1 else feature</span><br><span class="line">                self.persistent_data.append(</span><br><span class="line">                    &#123;</span><br><span class="line">                        &apos;city_index_id&apos;: meta[&apos;city_index_id&apos;],</span><br><span class="line">                        &apos;province_name&apos;: meta[&apos;province_name&apos;],</span><br><span class="line">                        &apos;city_name&apos;: meta[&apos;city_name&apos;],</span><br><span class="line">                        &apos;area_name&apos;: meta[&apos;area_name&apos;],</span><br><span class="line">                        &apos;detail_url&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[1]/a/@href&apos;)),</span><br><span class="line">                        &apos;name&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[1]/a/text()&apos;)),</span><br><span class="line">                        &apos;rent_way&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[2]/text()[1]&apos;)),</span><br><span class="line">                        &apos;door_model&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[2]/text()[2]&apos;)),</span><br><span class="line">                        &apos;area&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[2]/text()[3]&apos;)),</span><br><span class="line">                        &apos;toward&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd/p[2]/text()[4]&apos;)),</span><br><span class="line">                        &apos;unit_price&apos;: self.common_util.get_extract(dl_tag.xpath(&apos;dd//span[@class=&quot;price&quot;]/text()&apos;)),</span><br><span class="line">                        &apos;feature&apos;: feature</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">        # 下一页</span><br><span class="line">        page_a_list = hxf.xpath(&apos;//div[@class=&quot;fanye&quot;]/a&apos;)</span><br><span class="line">        if len(page_a_list) &gt; 0:</span><br><span class="line">            for page_a in page_a_list:</span><br><span class="line">                if self.common_util.get_extract(page_a.xpath(&apos;text()&apos;)) == &apos;下一页&apos;:</span><br><span class="line">                    yield scrapy.FormRequest(</span><br><span class="line">                        url=meta[&apos;base_url&apos;] + self.common_util.get_extract(page_a.xpath(&apos;@href&apos;)), method=&apos;GET&apos;, meta=meta, callback=self.parse_area</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">        self.save()</span><br><span class="line"></span><br><span class="line">    def save(self):</span><br><span class="line">        if len(self.persistent_data) &gt; self.save_threshold:</span><br><span class="line">            try:</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">            except AttributeError as e:</span><br><span class="line">                self.dao = DaoUtils()</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">                print(&apos;save except:&apos;, e)</span><br><span class="line">            finally:</span><br><span class="line">                self.persistent_data = list()</span><br><span class="line"></span><br><span class="line">    def save_final(self):</span><br><span class="line">        if len(self.persistent_data) &gt; 0:</span><br><span class="line">            try:</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">            except AttributeError as e:</span><br><span class="line">                self.dao = DaoUtils()</span><br><span class="line">                self.dao.customizable_add_ignore_batch(self.main_table, self.persistent_data)</span><br><span class="line">                print(&apos;save_final except:&apos;, e)</span><br><span class="line">            finally:</span><br><span class="line">                self.persistent_data = list()</span><br></pre></td></tr></table></figure><p>最后是做统计的sql和代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  area_name,</span><br><span class="line">  count(*) AS c</span><br><span class="line">FROM sou_fang_renting</span><br><span class="line">GROUP BY area_name</span><br><span class="line">ORDER BY c DESC;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">算算你再杭州的租房成本</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">from thor_crawl.utils.db.daoUtil import DaoUtils</span><br><span class="line">from thor_crawl.utils.db.mysql.mySQLConfig import MySQLConfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RentInHz:</span><br><span class="line">    def __init__(self, *args, **kwargs):</span><br><span class="line">        # ============ 工具 ============</span><br><span class="line">        self.dao = DaoUtils(**&#123;&apos;dbType&apos;: &apos;MySQL&apos;, &apos;config&apos;: MySQLConfig.localhost()&#125;)</span><br><span class="line"></span><br><span class="line">    def calc(self):</span><br><span class="line">        hz_data = self.dao.get_all(&apos;SELECT area_name, area, unit_price FROM sou_fang_renting&apos;)</span><br><span class="line"></span><br><span class="line">        temp = dict()</span><br><span class="line">        for row in hz_data:</span><br><span class="line">            if row[&apos;area_name&apos;] in temp:</span><br><span class="line">                temp[row[&apos;area_name&apos;]].append(row)</span><br><span class="line">            else:</span><br><span class="line">                temp[row[&apos;area_name&apos;]] = list()</span><br><span class="line">                temp[row[&apos;area_name&apos;]].append(row)</span><br><span class="line"></span><br><span class="line">        result = list()</span><br><span class="line">        for x, y in temp.items():</span><br><span class="line">            total = 0</span><br><span class="line">            num = 0</span><br><span class="line">            for row in y:</span><br><span class="line">                try:</span><br><span class="line">                    # print(float(row[&apos;unit_price&apos;]))</span><br><span class="line">                    # print(float(str(row[&apos;area&apos;]).replace(&apos;㎡&apos;, &apos;&apos;)))</span><br><span class="line">                    total += float(row[&apos;unit_price&apos;]) / float(str(row[&apos;area&apos;]).replace(&apos;㎡&apos;, &apos;&apos;))</span><br><span class="line">                    num += 1</span><br><span class="line">                except ValueError as e:</span><br><span class="line">                    print(e, x, row)</span><br><span class="line">            result.append(&#123;&apos;城市&apos;: x, &apos;平均数&apos;: total / num&#125;)</span><br><span class="line">        print(result)</span><br><span class="line"></span><br><span class="line">    def feature(self):</span><br><span class="line">        hz_data = self.dao.get_all(&apos;SELECT feature FROM sou_fang_renting&apos;)</span><br><span class="line"></span><br><span class="line">        feature_list = list()</span><br><span class="line">        for row in hz_data:</span><br><span class="line">            if row[&apos;feature&apos;] is not None and row[&apos;feature&apos;] != &apos;&apos;:</span><br><span class="line">                for x in str(row[&apos;feature&apos;]).split(&quot;,&quot;):</span><br><span class="line">                    feature_list.append(x)</span><br><span class="line"></span><br><span class="line">        temp = dict()</span><br><span class="line">        for row in feature_list:</span><br><span class="line">            if row in temp:</span><br><span class="line">                temp[row] = temp[row] + 1</span><br><span class="line">            else:</span><br><span class="line">                temp[row] = 1</span><br><span class="line">        print(temp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    tj = RentInHz()</span><br><span class="line">    tj.feature()</span><br></pre></td></tr></table></figure><h2 id="【我平时的开发环境和框架】"><a href="#【我平时的开发环境和框架】" class="headerlink" title="【我平时的开发环境和框架】"></a>【我平时的开发环境和框架】</h2><p>饭碗：Mac Pro 13寸</p><p>IDE：IntelliJ IDEA2018、PyCharm2017</p><p>JDK：8</p><p>打包：Maven 3</p><p>Python：2、3</p><p>Python 爬虫框架：Scrapy 1.3.3</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在外打工，大部分人每个月总要花一笔钱在租房上面，一起来看看杭州的租房情况。&lt;/p&gt;
&lt;p&gt;数据来源是F天下，该网站，按照百度的说法：“是全球最大的房地产家居网络平台”，数据源靠谱。&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.moremoney.ink/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="房屋数据" scheme="https://blog.moremoney.ink/tags/%E6%88%BF%E5%B1%8B%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>如何快速搭建SpringBoot项目？</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BASpringBoot%E9%A1%B9%E7%9B%AE%EF%BC%9F/"/>
    <id>https://blog.moremoney.ink/2019/03/02/如何快速搭建SpringBoot项目？/</id>
    <published>2019-03-02T14:27:27.000Z</published>
    <updated>2019-03-04T05:37:12.122Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>百度的解释：SpringBoot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。</p><p>SpringBoot的设计初衷是，为了让广大开发者尽可能快的把系统给跑起来，它倡导 “习惯优于配置”，开发过程中能够明显减少，以前使用SpringMvc开发系统需要的那堆配置文件。</p><a id="more"></a><p>优点很多，而且非常的实用。我在工作当中，现在使用的都是SpringBoot。</p><p>我们一步一步来创建一个简单、可运行的SpringBoot项目。</p><p>打开IDEA，点选“Create New Project”，弹出项目类型选择框。选择Maven项目，基于原型“maven-archetype-webapp”，然后点击“next”。（maven-archetype-webapp指的是Maven的Webapp工程样例。）</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oSxGFqbrWzI1SxIPvJATyhOD1HOqB5uw3HUibq7YWItO5xCVr2DZ5B6Og/640?wx_fmt=png" alt="img"></p><p>Maven项目需要输入Maven的坐标，即GroupId、ArtifactId、Version等信息。根据个人情况输入即可：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oSCwWXq2cYqLgXskGaEQicrlEIUlObbtLEuHUt7WzS5IsCMojVBYCrowA/640?wx_fmt=jpeg" alt="img"></p><p>一般，正在开发中的项目，我们可以使用“SNAPSHOT”标记的版本名称。这种版本可以不升级版本号就能不断刷新覆盖代码。</p><p>接下去，可以不用改变默认配置，一路Next最后Finish就行。如下：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oS5A3Fhicg4yM887Ok6EN30icMejS7fERjLQGxr5X5ajsnCRmn0zAldP2g/640?wx_fmt=jpeg" alt="img"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oSPgTSbccqstFwFboibTU2kQEghxhBoTMmA9048zKFcX6IWAHIMovIgGg/640?wx_fmt=jpeg" alt="img"></p><p>点击“Finish”之后，IDEA有一小会时间的项目构建。构建好之后，记得点击右下角的“Import Changes”，导入Maven依赖，以后大家每次都要记得导入，或者一劳永逸的设置成“Enable Auto-Import”，即自动导入，这样就不需要每次手动点击导入了：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oS9y4fzV4YfyMQMwpaCw0XBBhxM36KM5Soiaib9GWsxY6tVzVV5nSnZWqA/640?wx_fmt=png" alt="img"></p><p>接下去，我们配置pom.xml文件。</p><p>修改打包方式为“jar”，因为我们后续打算通过直接运行Jar包的方式，启动该web应用。并且还需要加上一个“打包成可执行的jar文件”Maven插件。</p><p>添加outputEncoding编码为UTF-8。由于我使用的是JDK8，所以把版本设置成1.8。由于是SpringBoot项目，还需要加上最关键的“spring-boot-starter-parent”。</p><p>给我们的系统配置一个中心仓库，我使用的是</p><p>“<a href="https://repo.maven.apache.org/maven2”。" target="_blank" rel="noopener">https://repo.maven.apache.org/maven2”。</a></p><p>再加上必要的依赖，最终配置好的pom.xml文件，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.mmn&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;share&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;share Maven Webapp&lt;/name&gt;</span><br><span class="line">    &lt;!-- FIXME change it to the project&apos;s website --&gt;</span><br><span class="line">    &lt;url&gt;http://www.example.com&lt;/url&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Inherit defaults from Spring Boot --&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.5.6.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--web模块--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- lombok 简化臃肿代码 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.16.18&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;central&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Central Repository&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;</span><br><span class="line">            &lt;layout&gt;default&lt;/layout&gt;</span><br><span class="line">            &lt;snapshots&gt;</span><br><span class="line">                &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class="line">            &lt;/snapshots&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;finalName&gt;share&lt;/finalName&gt;</span><br><span class="line">        &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span><br><span class="line">            &lt;plugins&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.8.0&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;2.22.1&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.2.2&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">                &lt;!--打包成可执行的jar文件--&gt;</span><br><span class="line">                &lt;plugin&gt;</span><br><span class="line">                    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;/plugin&gt;</span><br><span class="line">            &lt;/plugins&gt;</span><br><span class="line">        &lt;/pluginManagement&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>继续。创建一个resources目录，用于存放所有的配置文件；创建一个源文件存放目录“java”，并添加包结构“com.mmn.share”。在该包下，添加一个APP.java类，用于启动SpringBoot应用，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package com.mmn.share;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletComponentScan;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by Mmn on 2018/12/16.</span><br><span class="line"> * To be a happy coder!</span><br><span class="line"> */</span><br><span class="line">@SpringBootApplication</span><br><span class="line">@ServletComponentScan</span><br><span class="line">public class App &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(App.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要在浏览器里面访问一下这个系统，那我们还需要创建一个控制器类，来处理请求。创建一个包“controller”，在里面创建一个“HelloWorldController”控制器，用于处理“/helloWorld/”的请求，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.mmn.share.controller;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by Mmn on 2018/12/16.</span><br><span class="line"> * To be a happy coder!</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;helloWorld&quot;)</span><br><span class="line">public class HelloWorldController &#123;</span><br><span class="line">    @GetMapping(value = &#123;&quot;&quot;, &quot;helloWorld&quot;&#125;)</span><br><span class="line">    public String helloWorld() &#123;</span><br><span class="line">        return &quot;helloWorld&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目创建好了，通过运行APP.java，启动系统。默认分配的端口号是8080。我们在浏览器中输入“<a href="http://127.0.0.1:8080/helloWorld/”，就能访问该系统了：" target="_blank" rel="noopener">http://127.0.0.1:8080/helloWorld/”，就能访问该系统了：</a></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlFWygSt2QXEvnzhXEv6ic6oSZqSgrMZb4vqVcvQklcrhCZIxzoK6HJ3m36Xj79jSOSqu0pGq3jcngA/640?wx_fmt=png" alt="img"></p><p>本项目的代码，我放在百度云上了，地址是：</p><p><a href="https://pan.baidu.com/s/1AYxkGzKptZG3RD4iW7Ok1w" target="_blank" rel="noopener">https://pan.baidu.com/s/1AYxkGzKptZG3RD4iW7Ok1w</a></p><p>创建SpringBoot非常的简单。后续我还会分享跟SpringBoot相关的内容。</p><p>【我平时的开发环境】</p><p>饭碗：Mac Pro 13寸</p><p>IDE：IntelliJ IDEA2018、PyCharm2017</p><p>JDK：8</p><p>打包：Maven 3</p><p>Python：2、3</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;百度的解释：SpringBoot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。&lt;/p&gt;
&lt;p&gt;SpringBoot的设计初衷是，为了让广大开发者尽可能快的把系统给跑起来，它倡导 “习惯优于配置”，开发过程中能够明显减少，以前使用SpringMvc开发系统需要的那堆配置文件。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.moremoney.ink/categories/Java/"/>
    
    
      <category term="SpringBoot" scheme="https://blog.moremoney.ink/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>非常实用的Java工具类库</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E9%9D%9E%E5%B8%B8%E5%AE%9E%E7%94%A8%E7%9A%84Java%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93/"/>
    <id>https://blog.moremoney.ink/2019/03/02/非常实用的Java工具类库/</id>
    <published>2019-03-02T14:22:49.000Z</published>
    <updated>2019-03-03T14:41:00.377Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>给大家强烈推荐一个非常实用的Java工具类库——Lombok，它可以有效地减少Java代码的冗长，让你的代码，看上去非常的简洁、优雅。</p><a id="more"></a><p>大家一般都是使用某个IDE（IDE是集成开发环境，它可以有效的提升我们的工作效率），来开发项目。要使用强大的Lombok，首先需要给你的IDE安装上相关的插件。</p><p>我平常用的是IntelliJ IDEA（下面都简称为IDEA），Lombok的安装步骤如下：</p><p>1、打开IntelliJ IDEA左上角的Preferences，选择Plugins，在搜索框中输入“Lombok”；</p><p>2、这个时候搜索结果里面可能没有，那就需要点击搜索结果里面蓝色字体的“Search in repositories”，就是通过在线仓库查找Lombok相关插件。点击超链接后，会弹出“Browse Repositories”在线搜索结果；</p><p>3、选中结果集中的“Lombok Plugin”，然后在右侧的插件介绍面板中点击“Install”，安装这个插件；</p><p>4、IDEA需要下载该插件，然后在后台安装，一般情况下都挺快的，一分钟不到吧。安装完成之后，刚才你点击的那个绿色的“Install”按钮，会变成“Restart IntelliJ IDEA”，点击这个按钮，重新启动IDEA，就OK了。我们可以去Plugins里面看一下，就能看到我们刚才安装的“Lombok Plugin”插件了。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlGiaj5PkkqAYIZMjo7a8OX9a2MTrKhZribhjIUZWhKibqkbFNxDRfvsicFhAW9pLj6FC0IqpLjEg0HVNg/640?wx_fmt=png" alt="img"></p><p>安装好了插件，需要给项目引入Lombok依赖，可以直接下载Jar丢到你的项目里面，如果是Maven项目的话，可以在pom文件里面添加上依赖。我这边的例子是跑在Maven项目里的。</p><p>我一般是在</p><p>“<a href="https://mvnrepository.com/”这个中心仓库里面查找我想要的各种依赖。这个中心仓库东西很全。在中心仓库里面搜索“Lombok”，结果里的第一个就是，然后点进去选择具体的版本，我一般会选择使用最多的那个版本，这里是“1.18.2”：" target="_blank" rel="noopener">https://mvnrepository.com/”这个中心仓库里面查找我想要的各种依赖。这个中心仓库东西很全。在中心仓库里面搜索“Lombok”，结果里的第一个就是，然后点进去选择具体的版本，我一般会选择使用最多的那个版本，这里是“1.18.2”：</a></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlGiaj5PkkqAYIZMjo7a8OX9acyclicDCuOzqSHTQ5FaZuXhKlSxZUoxXiaKcPAI5ZtGnhmO5BD1P1cWw/640?wx_fmt=png" alt="img"></p><p>把依赖文本复制到我们的pom.xml文件里面，然后“import Changes”，把依赖真正的加到我们项目里面去就OK了：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlGiaj5PkkqAYIZMjo7a8OX9aTvRqAyOyC8wPuJ3psIFsKY6ywibnqjOLM4oPWibJPBUU6nibNONoOGtlA/640?wx_fmt=png" alt="img"></p><p>接下去就可以尽情的使用Lombok工具类库了。一个简单的例子如下：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/07hye8RWFlGiaj5PkkqAYIZMjo7a8OX9a98X9qNQoWo6Wtdr1tY0K57nMTX1bE3T5dyhsm0q9OMsicQq7hnBb2Aw/640?wx_fmt=png" alt="img"></p><p>看例子，能够很明显的感觉到，所写的代码非常简洁、清晰，少了大量的getter、setter、构造器等代码。</p><p>一般都是通过注解的方式使用Lombok，简单介绍一下常用的一些注解：</p><p>@Data注解：为Java类的所有字段生成getter、一个有用的toString方法和hashCode。还会为所有非final字段生成setter。该注解的作用等同于：@Getter、@Setter、@RequiredArgsConstructor、@ToString、@EqualsAndHashCode一起使用。</p><p>@Getter/@Setter注解：给相应的字段加上getter/setter方法，可以用在类或字段上。在类上面，标注这两个注解，表示该类中所有的非静态字段，都会生成相应的getter/setter方法；在字段上标注，则表示只给这个字段生成getter/setter方法，两者都有，则以标注在字段上优先。@Setter注解对final字段失效。</p><p>@ToString注解：只能标注在类上，给类生成一个具有一定可读性的toString()方法。</p><p>@NoArgsConstructor注解：给类生成一个无参构造器。</p><p>@AllArgsConstructor注解：给类生成一个包含所有字段的构造器。</p><p>@Builder注解：给类赋予了builder模式（建造者模式）。它可以解决字段很多的类重载多个构造器的繁琐，同时链式调用简化了类的构造。例子中“小码哥”那部分代码片段用到的就是这种模式。</p><p>@NonNull注解：可以标注在方法的参数上面。如果标注的这个参数，调用的时候传过来的值为null，则会抛出NPE（空指针异常），这样就不需要在代码中判空了，非常的方便。</p><p>@Log注解：可以给类添加一个日志对象log，使用的时候直接log.info(“some info”)就行，非常的方便。它使用的是Java自带的日志框架，该对象的类型是java.util.logging.Logger。</p><p>@Slf4j注解：它也用于记录日志，关于日志，我基本用的是这个注解。全称是simple logging facade for java，是Java的简单的日志门面。它不是具体的日志解决方案，它只服务于各种各样slf4j-logo的日志系统，比如Java自己的日志系统、Log4j、Log4j2、logback、JBossLog等，用Slf4j可以用统一的风格，编写日志代码。以后切换日志系统，也不需要修改任何代码。</p><p>还有其他的一些注解，我不太常用，大家有兴趣的也可以去研究一下，比如：@NonFinal、@PackagePrivate、@SuperBuilder、@Wither、@Singular、@Synchronized、@Value、@SneakyThrows等等，具体可以去官网查看他们的使用方法或直接在Jar包里面看代码。官网是：<a href="https://www.projectlombok.org/" target="_blank" rel="noopener">https://www.projectlombok.org/</a></p><p>有想法的开发者，可能会想，这一切，Lombok是怎么实现的呢？</p><p>万变不离其宗，就算工具在我们编写代码的这一步做了手脚，编译后的代码还是会还原最真实的面貌。编译后的代码，如下图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">package com.mmn.sum.example;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class LombokUser &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private Integer age;</span><br><span class="line">    private List&lt;String&gt; hobby;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LombokUser anonymous = new LombokUser();</span><br><span class="line">        System.out.println(anonymous);</span><br><span class="line">        List&lt;String&gt; mmnHobby = new ArrayList();</span><br><span class="line">        mmnHobby.add(&quot;打代码&quot;);</span><br><span class="line">        LombokUser mmn = new LombokUser(&quot;猫玛尼&quot;, 27, mmnHobby);</span><br><span class="line">        System.out.println(mmn);</span><br><span class="line">        List&lt;String&gt; littleZHobby = new ArrayList();</span><br><span class="line">        littleZHobby.add(&quot;吃东西&quot;);</span><br><span class="line">        LombokUser littleZ = new LombokUser();</span><br><span class="line">        littleZ.setAge(18);</span><br><span class="line">        littleZ.setName(&quot;小张&quot;);</span><br><span class="line">        littleZ.setHobby(littleZHobby);</span><br><span class="line">        System.out.println(littleZ);</span><br><span class="line">        LombokUser xmg = builder().age(36).name(&quot;小码哥&quot;).hobby(new ArrayList()).build();</span><br><span class="line">        System.out.println(xmg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static LombokUser.LombokUserBuilder builder() &#123;</span><br><span class="line">        return new LombokUser.LombokUserBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return this.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getAge() &#123;</span><br><span class="line">        return this.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;String&gt; getHobby() &#123;</span><br><span class="line">        return this.hobby;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAge(Integer age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setHobby(List&lt;String&gt; hobby) &#123;</span><br><span class="line">        this.hobby = hobby;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean equals(Object o) &#123;</span><br><span class="line">        if (o == this) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (!(o instanceof LombokUser)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LombokUser other = (LombokUser)o;</span><br><span class="line">            if (!other.canEqual(this)) &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                label47: &#123;</span><br><span class="line">                    Object this$name = this.getName();</span><br><span class="line">                    Object other$name = other.getName();</span><br><span class="line">                    if (this$name == null) &#123;</span><br><span class="line">                        if (other$name == null) &#123;</span><br><span class="line">                            break label47;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else if (this$name.equals(other$name)) &#123;</span><br><span class="line">                        break label47;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Object this$age = this.getAge();</span><br><span class="line">                Object other$age = other.getAge();</span><br><span class="line">                if (this$age == null) &#123;</span><br><span class="line">                    if (other$age != null) &#123;</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (!this$age.equals(other$age)) &#123;</span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Object this$hobby = this.getHobby();</span><br><span class="line">                Object other$hobby = other.getHobby();</span><br><span class="line">                if (this$hobby == null) &#123;</span><br><span class="line">                    if (other$hobby != null) &#123;</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (!this$hobby.equals(other$hobby)) &#123;</span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected boolean canEqual(Object other) &#123;</span><br><span class="line">        return other instanceof LombokUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int hashCode() &#123;</span><br><span class="line">        int PRIME = true;</span><br><span class="line">        int result = 1;</span><br><span class="line">        Object $name = this.getName();</span><br><span class="line">        int result = result * 59 + ($name == null ? 43 : $name.hashCode());</span><br><span class="line">        Object $age = this.getAge();</span><br><span class="line">        result = result * 59 + ($age == null ? 43 : $age.hashCode());</span><br><span class="line">        Object $hobby = this.getHobby();</span><br><span class="line">        result = result * 59 + ($hobby == null ? 43 : $hobby.hashCode());</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;LombokUser(name=&quot; + this.getName() + &quot;, age=&quot; + this.getAge() + &quot;, hobby=&quot; + this.getHobby() + &quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public LombokUser() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public LombokUser(String name, Integer age, List&lt;String&gt; hobby) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">        this.hobby = hobby;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static class LombokUserBuilder &#123;</span><br><span class="line">        private String name;</span><br><span class="line">        private Integer age;</span><br><span class="line">        private List&lt;String&gt; hobby;</span><br><span class="line"></span><br><span class="line">        LombokUserBuilder() &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public LombokUser.LombokUserBuilder name(String name) &#123;</span><br><span class="line">            this.name = name;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public LombokUser.LombokUserBuilder age(Integer age) &#123;</span><br><span class="line">            this.age = age;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public LombokUser.LombokUserBuilder hobby(List&lt;String&gt; hobby) &#123;</span><br><span class="line">            this.hobby = hobby;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public LombokUser build() &#123;</span><br><span class="line">            return new LombokUser(this.name, this.age, this.hobby);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public String toString() &#123;</span><br><span class="line">            return &quot;LombokUser.LombokUserBuilder(name=&quot; + this.name + &quot;, age=&quot; + this.age + &quot;, hobby=&quot; + this.hobby + &quot;)&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以清楚的看到，编译后的代码，比原来多了很多的Getter、Setter，还有equals、LombokUserBuilder等。</p><p>我们做技术的，在个人能力没有触达的地方，可以通过强大的Google、Baidu来借助高人。</p><p>我翻阅了一些资料，原来 Lombok实现了JSR 269 API，即插入式注解处理API。它提供了一套标准API来处理Annotations，我们可以利用JSR 269提供的API来构建一个功能丰富的元编程(metaprogramming)环境。有兴趣的同学，可以自行深入研究。</p><p>用起来很简单，但是背后的设计思想还是很厉害的。</p><p>感谢高人，为我们提供了这么好的工具类库~</p><p>【我平时的开发环境】</p><p>饭碗：Mac Pro 13寸</p><p>IDE：IntelliJ IDEA 2018</p><p>JDK：8</p><p>打包：Maven 3</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;给大家强烈推荐一个非常实用的Java工具类库——Lombok，它可以有效地减少Java代码的冗长，让你的代码，看上去非常的简洁、优雅。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.moremoney.ink/categories/Java/"/>
    
    
      <category term="Java实用类库" scheme="https://blog.moremoney.ink/tags/Java%E5%AE%9E%E7%94%A8%E7%B1%BB%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>编写优雅的代码</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E7%BC%96%E5%86%99%E4%BC%98%E9%9B%85%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>https://blog.moremoney.ink/2019/03/02/编写优雅的代码/</id>
    <published>2019-03-02T14:20:24.000Z</published>
    <updated>2019-03-04T05:46:47.150Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>在上家公司，我给我们团队做过一个关于编写优雅代码的分享，是我个人的思考和总结。</p><a id="more"></a><p>我觉得，优雅的代码首先应该是清晰的。在如今的社会中，不再是单打独斗就能把事情做好做大的。一个人可以走得快，一群人才能走得远。而且现实工作中，我们也会和身边的同事，合作开发各种项目。编写出结构合适，见名知意，条理清楚的代码，别人就能很容易的读懂，后续维护也会变得简单。</p><p>打了几年的代码，我发现，自己写的代码，阅读最多的人就是自己。编写出清晰的代码，也是给自己留条好走的路，不然过段时间，连自己都不知道这段莫名其妙的代码到底是干啥的。</p><p>程序员这个市场，现在也不小，不缺会写能跑通功能的代码的那种程序员。所以我们要增强软实力，不断提高自己的竞争力。</p><p>写清晰的代码是前提，写正确的代码是根本。</p><p>如何编写正确的代码，每个人都有不同的办法。我的话，在开发一个功能前，会先理清楚开发需求，然后根据需求编写开发文档和技术方案，编写方案的过程中，就会把细节都想清楚，遇到和我理解不同的，或者我有一些其他想法的地方，我就会跟产品经理沟通。在沟通的过程中，我对整个产品就会有更深刻的认识。</p><p>整理出来的文档，也会在正式开发之前，和相关同事评审，人多力量大，我思考不全面的地方，就会在这个时候得到完善。</p><p>经过这几个步骤，在开发过程中，就会更加的得心应手，在大方向上就保证了正确性。具体到代码上面，细节的点需要去把握。开发完成之后，需要有一些单元测试来检验代码。</p><p>在正确的基础上，我们就要去斟酌，那些跑起来总是有点慢的代码。</p><p>也就是需要对一些影响性能的代码进行优化。比如批量修改代替循环修改，字符串拼接使用StringBuilder、StringBuffer，避免过多的自动装箱、拆箱等等。很多地方，可以去完善。</p><p>总结起来就是三点：</p><p>1、写清晰的代码</p><p>2、写正确的代码</p><p>3、写高性能的代码</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在上家公司，我给我们团队做过一个关于编写优雅代码的分享，是我个人的思考和总结。&lt;/p&gt;
    
    </summary>
    
      <category term="编码风格" scheme="https://blog.moremoney.ink/categories/%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/"/>
    
    
      <category term="小总结" scheme="https://blog.moremoney.ink/tags/%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>免费代理IP罗列</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E5%85%8D%E8%B4%B9%E4%BB%A3%E7%90%86IP%E7%BD%97%E5%88%97/"/>
    <id>https://blog.moremoney.ink/2019/03/02/免费代理IP罗列/</id>
    <published>2019-03-02T14:15:58.000Z</published>
    <updated>2019-03-03T14:41:04.953Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>做爬虫不可避免的会涉及到代理IP。我整理了一些有免费代理IP的网站网站：</p><p>1、西刺免费代理IP</p><p><a href="http://www.xicidaili.com/" target="_blank" rel="noopener">http://www.xicidaili.com/</a></p><a id="more"></a><p>2、66免费代理</p><p><a href="http://www.66ip.cn/" target="_blank" rel="noopener">http://www.66ip.cn/</a></p><p>3、有代理IP</p><p><a href="http://www.youdaili.net/" target="_blank" rel="noopener">http://www.youdaili.net/</a></p><p>4、快代理</p><p><a href="https://www.kuaidaili.com/free/" target="_blank" rel="noopener">https://www.kuaidaili.com/free/</a></p><p>5、云代理</p><p><a href="http://www.ip3366.net/" target="_blank" rel="noopener">http://www.ip3366.net/</a></p><p>6、流年免费HTTP代理IP</p><p><a href="http://www.89ip.cn/" target="_blank" rel="noopener">http://www.89ip.cn/</a></p><p>7、纯真</p><p><a href="http://www.cz88.net/proxy/" target="_blank" rel="noopener">http://www.cz88.net/proxy/</a></p><p>8、全网代理IP</p><p><a href="http://www.goubanjia.com/" target="_blank" rel="noopener">http://www.goubanjia.com/</a></p><p>9、http代理IP</p><p><a href="http://www.httpdaili.com/" target="_blank" rel="noopener">http://www.httpdaili.com/</a></p><p>10、米扑代理</p><p><a href="http://proxy.mimvp.com/" target="_blank" rel="noopener">http://proxy.mimvp.com/</a></p><p>11、代哪儿</p><p><a href="http://dl.dainar.net/" target="_blank" rel="noopener">http://dl.dainar.net/</a></p><p>12、极速IP</p><p><a href="http://superfastip.com/" target="_blank" rel="noopener">http://superfastip.com/</a></p><p>13、站大爷</p><p><a href="http://ip.zdaye.com/dayProxy.html" target="_blank" rel="noopener">http://ip.zdaye.com/dayProxy.html</a></p><p>14、data5u</p><p><a href="http://www.data5u.com/" target="_blank" rel="noopener">http://www.data5u.com/</a></p><p>15、开心代理</p><p><a href="http://ip.kxdaili.com/" target="_blank" rel="noopener">http://ip.kxdaili.com/</a></p><p>16、小幻HTTP代理</p><p><a href="https://ip.ihuan.me/" target="_blank" rel="noopener">https://ip.ihuan.me/</a></p><p>17、IP海</p><p><a href="http://www.iphai.com/" target="_blank" rel="noopener">http://www.iphai.com/</a></p><p>……</p><p>后续我打算分享一下，我是如何在项目中结合代理IP的。</p><p>以及构造自己的免费的代理IP池。大致想法就是多找几个网站，根据对方的更新频率，定时爬取这些网站上的免费代理IP，然后存放到自己的数据库中，再写一个校验代理IP是否有效的程序，以一定的频率去校验代理IP，并且做好标记，其中很久远的代理IP就剔除。同时要有提醒服务，比如对方网站的结构更新了，会提醒到我，然后我就更新爬虫程序。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;做爬虫不可避免的会涉及到代理IP。我整理了一些有免费代理IP的网站网站：&lt;/p&gt;
&lt;p&gt;1、西刺免费代理IP&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xicidaili.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.xicidaili.com/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.moremoney.ink/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="代理IP" scheme="https://blog.moremoney.ink/tags/%E4%BB%A3%E7%90%86IP/"/>
    
  </entry>
  
  <entry>
    <title>浅析爬虫</title>
    <link href="https://blog.moremoney.ink/2019/03/02/%E6%B5%85%E6%9E%90%E7%88%AC%E8%99%AB/"/>
    <id>https://blog.moremoney.ink/2019/03/02/浅析爬虫/</id>
    <published>2019-03-02T13:47:38.000Z</published>
    <updated>2019-03-04T05:46:22.263Z</updated>
    
    <content type="html"><![CDATA[<p>文章是从公众号《猫玛尼》迁移过来，内容稍有调整。</p><hr><p>技术方面，虽然我不算大牛，最近也专研的少了（接下去会重拾技术），但是我这几年来也有自己的理解和积累，可以给大家慢慢地分享分享。</p><p>想要分享的东西很多，比如我工作上主要使用的是Java平台，曾经也写过一点点前端，偶尔也会接到爬虫的需求，用Pyhton处理一些数据，用shell写一些自动化脚本，自己做一些小的程序等等……</p><p>思来想去，先给大家简单说说我对爬虫的理解吧。</p><a id="more"></a><p>我指的“爬虫”，不是动物的那种“爬虫”，而是我们干IT的人，专门说的“爬虫”。</p><p>那么，什么是爬虫呢？</p><p>百度把爬虫和“网络爬虫”归到了一起，解释为：是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。</p><p>我自己的理解：爬虫是能够不断地自动访问互联网并将网站内容下载下来的程序或脚本，类似一个机器人，能把别人网站的信息弄过来，再做一些过滤，筛选，归纳，排序，整理等操作，让这些数据产生价值。</p><p>更进一步，我觉得只要是自动去做的事情，都可以称之为爬虫。比如批量注册，批量评论、点赞，微信QQ聊天机器人等……</p><p>那么爬虫可以用来做什么呢？</p><p>其实爬虫的作用很多：</p><p>1、google、百度这类搜索引擎采集数据供大家搜索；</p><p>2、今日头条、推酷这类内容分发平台，获取其他网站的内容来扩充自己；</p><p>3、垂直网站补充数据，比如汽车配件相关的汽车超人、途虎养车；</p><p>4、比价工具、银行网点查询这类工具型应用的数据来源</p><p>5、个人网站、微信公众号的内容来源</p><p>6、获取电影，图片，天气，等数据</p><p>等等……以及其他一些更酷的事情，可以去知乎看一篇文章。</p><p>爬虫他是一门技术活，那就肯定会涉及相关的IT技术了。</p><p>首先你肯定要理解HTTP相关的知识，要能看得懂什么是请求头，请求方式是什么，不同的响应状态具体代表什么含义，比如200是成功，403是拒绝访问，404是不存在等，还要了解cookie，因为很多网站的登录信息是在cookie里面的，有些网站很机智，会放一些特殊字段在cookie里面。还有鉴权，代理等。</p><p>前端知识也需要有一定的了解。爬下来的页面需要分析HTML的结构，才能提取到想要的数据。要能够看得懂CSS样式、JS脚本，常用的JS框架比如JQuery，曾经我一个朋友让我到某个轴承网站搞到上面的报告文件，需要登录才能获取，我拿到页面分析了一下JS代码，发现登录相关的那段JS代码有一个明显的漏洞，完全可以绕开去下载。还需要知道Json，因为现在很多网站都是前后盾分离了，还有些是专门提供APP、小程序、公众号的后台API，这些的返回基本上都是Json数据。Ajax就不用说了，现在动态网站很多，都是那种动态加载数据的。</p><p>并发编程相关的技术，也需要掌握。多进程、多线程这些都是基础，毕竟抓取的量如果很大的话，你一个程序去跑，那要等到猴年马月才能拿到这些数据了，这时候就要用到分布式爬虫了。</p><p>拿到页面，我们需要用程序去解析这个页面的结构，获取数据，这个时候就需要用到xpath、正则、css选择器这些知识了。我比较推荐xpath，因为它非常的简单，一般打代码的人都能看懂，可以到w3cshool上面去学期，网址是<a href="http://www.w3school.com.cn/xpath/index.asp。" target="_blank" rel="noopener">http://www.w3school.com.cn/xpath/index.asp。</a></p><p>抓到数据，存下来，才能发挥他的价值。所以还需要了解数据库方面的知识，常用的mysql数据库，轻量便捷快速的NoSQL数据库，搜索Elasticsearch，大数据处理Hoodap等。</p><p>工欲善其事必先利其器，一些辅助工具和相关类库必不可少。我们可以使用浏览器查看请求，用fiddler、charles这类工具抓取请求并分析他们。Python的话requests这个库非常好用，Java的话我们可以使用okhttp3或者retrofit2去模拟请求。</p><p>爬虫，把“一个道高一尺魔高一丈”这句话体现的淋漓尽致。爬虫、反爬虫、反反爬虫不断的在上演。所以，作为一名开发爬虫的程序员，一定要知道反爬虫相关的知识，比如User-Agent、header、代理IP池、动态IP请求、分布式、图片验证、网页结构更新、登录、动态加载、特殊字符、css文字等等。</p><p>再来说说爬虫框架。平时工作中，我最常使用的爬虫框架，就是Python的Scrapy了，这个框架，我觉得干爬虫的应该都知道，非常的强大。他有有一个中间件的概念，使的框架用起来很灵活。Java的话，有一款国人写的，我以前接触过，叫做“Webmagic”，不过我没有深入研究，主要是我觉得用起来比较麻烦，还需要去学习这套框架，有点划不来，不过我不是贬低这个框架，请大家不要误会，毕竟能写出来这个框架，也是非常了不起的。还有一些情况，比如一般简单的爬虫需求，我可能不会去用框架来完成。</p><p>时间有限，也比较仓促，涉及的不深，以后大家有兴趣，我也会更多的分享这方面的内容，以及编写一些实际的案例，让大家看看我是如何一步一步去分析思考并最终爬取到数据的。</p><p>还有一点大家需要注意，那就是做爬虫时候的道德问题，要去遵守网站的robots.txt，不要因为自己的目的影响对方网站的正常运行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章是从公众号《猫玛尼》迁移过来，内容稍有调整。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;技术方面，虽然我不算大牛，最近也专研的少了（接下去会重拾技术），但是我这几年来也有自己的理解和积累，可以给大家慢慢地分享分享。&lt;/p&gt;
&lt;p&gt;想要分享的东西很多，比如我工作上主要使用的是Java平台，曾经也写过一点点前端，偶尔也会接到爬虫的需求，用Pyhton处理一些数据，用shell写一些自动化脚本，自己做一些小的程序等等……&lt;/p&gt;
&lt;p&gt;思来想去，先给大家简单说说我对爬虫的理解吧。&lt;/p&gt;
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.moremoney.ink/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="小总结" scheme="https://blog.moremoney.ink/tags/%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>HelloWorld</title>
    <link href="https://blog.moremoney.ink/2019/03/01/HelloWorld/"/>
    <id>https://blog.moremoney.ink/2019/03/01/HelloWorld/</id>
    <published>2019-02-28T16:00:00.000Z</published>
    <updated>2019-03-04T03:09:30.700Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫“猫玛尼”。男，纯正90后，南方人，目前在一家互联网公司工作，是一名程序员。加油，前行！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="关于我" scheme="https://blog.moremoney.ink/categories/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
    
      <category term="我" scheme="https://blog.moremoney.ink/tags/%E6%88%91/"/>
    
      <category term="第一篇" scheme="https://blog.moremoney.ink/tags/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    
  </entry>
  
</feed>
